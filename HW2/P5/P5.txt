Changing the update loops to pranges from 1 thread -> 4 threads roughly doubled the fps (~10 fps -> ~23 fps).
The update function has 3 loops: 2 of them performed better on the single thread. This might be because it's a straightforward calculation that didn't warrant the overhead of creating new threads and distributing the objects?
The other loop gives the roughly double speedup that we saw - it's more work than the other 2 loops, but it's not distributed equally. It has an inner loop from j=i+1 to count, so the last thread has less iterations to loop through than the first.

Adding the Grid component improved fps by more than 10x - 1 thread was returning ~600fps while 4 threads surprisingly only ~300fps. I narrowed down the cause of the slowdown to the section where the Grid is being updated - perhaps they're trying to write to the same memory location and this is causing a slowdown that wouldn't happen serially.
